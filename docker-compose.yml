version: '3.3'
services:

  #Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 20080:80
    image: digitalocean.com/php
    container_name: frontend
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: frontend
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Backend Service
  backend:
      build:
        context: .
        dockerfile: Dockerfile
      ports:
        - 21080:80
      image: digitalocean.com/php
      container_name: backend
      restart: unless-stopped
      tty: true
      environment:
        SERVICE_NAME: backend
        SERVICE_TAGS: dev
      working_dir: /var/www
      volumes:
        - ./:/var/www
        - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
      networks:
        - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: yii2-advanced-db
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Redis Service
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    tty: true
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
  redis-data:
    driver: local
